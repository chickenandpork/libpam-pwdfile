ACLOCAL_AMFLAGS = -I m4

# NOTE gitdescribe is used with the "git describe" command to effectively
# auto-increment a patch-level of the release based on a tag when the first
# version is cloned from upstream
CONFIG_STATUS_DEPENDENCIES = gitdescribe
EXTRA_DIST = @PACKAGE@.spec gitdescribe

seclibdir = $(libdir)/security
seclib_LTLIBRARIES = pam_pwdfile.la
pam_pwdfile_la_SOURCES = pam_pwdfile.c bigcrypt.c bigcrypt.h
pam_pwdfile_la_CPPFLAGS = -DUSE_CRYPT_R -D_FILE_OFFSET_BITS=64 
pam_pwdfile_la_CFLAGS = -Wall -Wformat-security -fPIC -fvisibility=hidden
pam_pwdfile_la_LDFLAGS = -module
pam_pwdfile_la_LIBADD = libbroken.a

# NOTE: in the original upstream md5.c and md5_crypt.c are never directly
# built, but only built with the additional -DHIGHFIRST and -DMD5Name flags. 
# In order to build these with different flags without gauging the effect of
# these CFLAGS on the other sources, I (allanc@chickenandporn) am including
# them as a build-time library which is then linked in at the final delivery
noinst_LIBRARIES = libbroken.a
libbroken_a_SOURCES = md5.c md5_crypt.c md5.h
libbroken_a_CPPFLAGS = -DUSE_CRYPT_R -D_FILE_OFFSET_BITS=64 
libbroken_a_CFLAGS = -DHIGHFIRST -D'MD5Name(x)=Broken\#\#x' -Wall -Wformat-security -fPIC -fvisibility=hidden


# NOTE: uses upstream-specific tools that I (allanc@chickenandporn) cannot
# yet locate

changelog-from-git: changelog
	{ git log --decorate $(shell head -1 changelog | cut -d\  -f2).. | vipe; echo; cat changelog; } | sponge changelog



# NOTE: the following, based on a "git tag -a", auto-increments for each
# commit a version via configure.ac "BUILDID" determination
if HAVE_GIT
gitdescribe: .git/index
	git describe > $@
endif HAVE_GIT


# NOTE: I use this to automate my build: 
# autoreconf -vfi
# ./configure --with-sudopostmove=(RPM target dir)
# make srpm

if HAVE_RPMBUILD
srpm: distcheck
	@mkdir -p $$(rpm --eval '%{_srcrpmdir}')
	@RPMBUILD@ -ts $(PACKAGE)-$(VERSION).tar.bz2
if DO_SUDOPOSTMOVE
	mv -f $$(rpm --eval '%{_srcrpmdir}')/@PACKAGE@-$$(rpm --qf '%{VERSION}\n' -q --specfile @PACKAGE@.spec |head -1)-$$(rpm --qf '%{RELEASE}\n' -q --specfile @PACKAGE@.spec |head -1).src.rpm @SUDOPOSTMOVE@
endif   DO_SUDOPOSTMOVE

if HAVE_GIT
re-dist-bzip2: gitdescribe
	rm -f @PACKAGE@.spec $(PACKAGE)-$(VERSION).tar.bz2
	touch configure
	$(MAKE) dist-bzip2
rpm: re-dist-bzip2
else
rpm: dist-bzip2
endif HAVE_GIT_FALSE
	@RPMBUILD@ --define 'skipcheck 1' -ta $(PACKAGE)-$(VERSION).tar.bz2
endif
